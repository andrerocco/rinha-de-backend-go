/*
type Repository interface {
	Create(person *Pessoa) error
	CheckNicknameExists(nickname string) (bool, error)
	FindByID(id string) (*Pessoa, error)
	Search(term string) ([]Pessoa, error)
	CountAll() (int64, error)
}
*/
// Aqui, você implementa funções que lidam diretamente com o banco de dados.
// Isso inclui operações como criar, ler, atualizar e excluir registros no banco de dados.
// Exemplo (repository/pessoa_repository.go):

/* package repository

import (
    "database/sql"
    "github.com/andrerocco/rinha-de-backend-go/cmd/api/models"
)

type PessoaRepository struct {
    db *sql.DB
}

func NewPessoaRepository(db *sql.DB) *PessoaRepository {
    return &PessoaRepository{db}
}

func (r *PessoaRepository) CriarPessoa(pessoa *models.Pessoa) error {
    // Implemente a lógica para criar uma nova pessoa no banco de dados aqui.
    return nil
}

// Implemente outras funções de leitura, atualização e exclusão aqui.
*/
